# Generated by Django 5.0.1 on 2024-03-20 12:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('books', '0002_alter_author_id_alter_book_id_alter_bookauthor_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Books_Author',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('birth_year', models.SmallIntegerField(blank=True, null=True)),
                ('death_year', models.SmallIntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Books_Book',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('download_count', models.IntegerField(blank=True, null=True)),
                ('gutenberg_id', models.IntegerField()),
                ('media_type', models.CharField(max_length=16)),
                ('title', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Books_Bookshelf',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Books_Language',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=4, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Books_Subject',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
            ],
        ),
        migrations.RemoveField(
            model_name='book',
            name='authors',
        ),
        migrations.RemoveField(
            model_name='bookauthor',
            name='author',
        ),
        migrations.RemoveField(
            model_name='book',
            name='bookshelves',
        ),
        migrations.RemoveField(
            model_name='book',
            name='languages',
        ),
        migrations.RemoveField(
            model_name='book',
            name='subjects',
        ),
        migrations.RemoveField(
            model_name='format',
            name='book',
        ),
        migrations.RemoveField(
            model_name='booklanguage',
            name='book',
        ),
        migrations.RemoveField(
            model_name='bookbookshelf',
            name='book',
        ),
        migrations.RemoveField(
            model_name='bookauthor',
            name='book',
        ),
        migrations.RemoveField(
            model_name='booksubject',
            name='book',
        ),
        migrations.AlterUniqueTogether(
            name='bookauthor',
            unique_together=None,
        ),
        migrations.AlterUniqueTogether(
            name='bookbookshelf',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='bookbookshelf',
            name='bookshelf',
        ),
        migrations.AlterUniqueTogether(
            name='booklanguage',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='booklanguage',
            name='language',
        ),
        migrations.AlterUniqueTogether(
            name='booksubject',
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name='booksubject',
            name='subject',
        ),
        migrations.CreateModel(
            name='Books_Book_Authors',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books_author')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books_book')),
            ],
            options={
                'unique_together': {('book', 'author')},
            },
        ),
        migrations.AddField(
            model_name='books_book',
            name='authors',
            field=models.ManyToManyField(related_name='books', through='books.Books_Book_Authors', to='books.books_author'),
        ),
        migrations.CreateModel(
            name='Books_Book_Bookshelves',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books_book')),
                ('bookshelf', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books_bookshelf')),
            ],
            options={
                'unique_together': {('book', 'bookshelf')},
            },
        ),
        migrations.AddField(
            model_name='books_book',
            name='bookshelves',
            field=models.ManyToManyField(related_name='books', through='books.Books_Book_Bookshelves', to='books.books_bookshelf'),
        ),
        migrations.CreateModel(
            name='Books_Format',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('mime_type', models.CharField(max_length=32)),
                ('url', models.TextField()),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='formats', to='books.books_book')),
            ],
        ),
        migrations.CreateModel(
            name='Books_Book_Languages',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books_book')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books_language')),
            ],
            options={
                'unique_together': {('book', 'language')},
            },
        ),
        migrations.AddField(
            model_name='books_book',
            name='languages',
            field=models.ManyToManyField(related_name='books', through='books.Books_Book_Languages', to='books.books_language'),
        ),
        migrations.CreateModel(
            name='Books_Book_Subjects',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books_book')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.books_subject')),
            ],
            options={
                'unique_together': {('book', 'subject')},
            },
        ),
        migrations.AddField(
            model_name='books_book',
            name='subjects',
            field=models.ManyToManyField(related_name='books', through='books.Books_Book_Subjects', to='books.books_subject'),
        ),
        migrations.DeleteModel(
            name='Author',
        ),
        migrations.DeleteModel(
            name='Format',
        ),
        migrations.DeleteModel(
            name='BookAuthor',
        ),
        migrations.DeleteModel(
            name='Book',
        ),
        migrations.DeleteModel(
            name='BookBookshelf',
        ),
        migrations.DeleteModel(
            name='Bookshelf',
        ),
        migrations.DeleteModel(
            name='BookLanguage',
        ),
        migrations.DeleteModel(
            name='Language',
        ),
        migrations.DeleteModel(
            name='BookSubject',
        ),
        migrations.DeleteModel(
            name='Subject',
        ),
    ]
